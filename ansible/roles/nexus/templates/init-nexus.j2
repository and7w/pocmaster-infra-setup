#!/bin/bash

# =========================
# Script Nexus Optimization
# Description : Automatisation du déploiement Nexus avec gestion d'utilisateurs
# =========================

# =========================
# Variables Globales
# =========================
PID_FILE="/var/run/nexus.pid"
NEXUS_USER="{{ nexus_os_user }}"
NEXUS_GROUP="{{ nexus_os_group }}"
NEXUS_HOME="{{nexus_installation_dir}}"
NEXUS_DATA="/opt/sonatype-work"
NEXUS_LOG="/var/log/nexus.log"

# =========================
# Fonctions Utilitaires
# =========================
log() {
    local level="$1"
    local message="$2"
    echo "[$(date '+%Y-%m-%d %H:%M:%S')] [$level] $message" >> "$NEXUS_LOG"
    echo "[$level] $message"
}

error_exit() {
    log "ERROR" "$1"
    exit 1
}

# Vérifie si le script est exécuté en tant que root
check_root() {
    if [ "$EUID" -ne 0 ]; then
        error_exit "Ce script doit être exécuté en tant que root."
    fi
}

# Vérifie l'existence d'un utilisateur et d'un groupe
create_user_group() {
    log "INFO" "Vérification de l'utilisateur et du groupe Nexus."
    if ! id -u "$NEXUS_USER" >/dev/null 2>&1; then
        useradd -r -s /bin/false "$NEXUS_USER" || error_exit "Échec de la création de l'utilisateur $NEXUS_USER."
        log "INFO" "Utilisateur $NEXUS_USER créé."
    fi
    if ! getent group "$NEXUS_GROUP" >/dev/null 2>&1; then
        groupadd "$NEXUS_GROUP" || error_exit "Échec de la création du groupe $NEXUS_GROUP."
        log "INFO" "Groupe $NEXUS_GROUP créé."
    fi
    usermod -aG "$NEXUS_GROUP" "$NEXUS_USER"
}

# Vérifie et gère les permissions
setup_permissions() {
    log "INFO" "Configuration des permissions pour Nexus."
    chown -R "$NEXUS_USER":"$NEXUS_GROUP" "$NEXUS_HOME" "$NEXUS_DATA"
    chmod -R 750 "$NEXUS_HOME" "$NEXUS_DATA"
    log "INFO" "Permissions configurées."
}

# =========================
# Gestion du Service Nexus
# =========================
start_nexus() {
    log "INFO" "Démarrage de Nexus."
    if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        error_exit "Nexus est déjà en cours d'exécution."
    fi
    su - "$NEXUS_USER" -c "$NEXUS_HOME/bin/nexus start" || error_exit "Échec du démarrage de Nexus."
    echo $! > "$PID_FILE"
    log "INFO" "Nexus démarré avec succès."
}

stop_nexus() {
    log "INFO" "Arrêt de Nexus."
    if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        kill -9 $(cat "$PID_FILE") || error_exit "Échec de l'arrêt de Nexus."
        rm -f "$PID_FILE"
        log "INFO" "Nexus arrêté avec succès."
        else
        log "WARNING" "Nexus n'est pas en cours d'exécution."
    fi
}

restart_nexus() {
    log "INFO" "Redémarrage de Nexus."
    stop_nexus
    start_nexus
}

status_nexus() {
    log "INFO" "Vérification du statut de Nexus."
    if [ -f "$PID_FILE" ] && kill -0 $(cat "$PID_FILE") 2>/dev/null; then
        log "INFO" "Nexus est en cours d'exécution."
    else
        log "INFO" "Nexus est arrêté."
    fi
}

# =========================
# Main
# =========================
main() {
    check_root
    create_user_group
    setup_permissions

    case "$1" in
        start)
            start_nexus
            ;;
        stop)
            stop_nexus
            ;;
        restart)
            restart_nexus
            ;;
        status)
            status_nexus
            ;;
        *)
            echo "Usage: $0 {start|stop|restart|status}"
            exit 1
            ;;
    esac
}

main "$@"
